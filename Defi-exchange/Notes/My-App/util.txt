This file is used to simplify creating instances of the token and exchange contracts for use in our utility files and our index.js file.\

--------------------------------------------------------------------------------------------------------------------------------

import { Contract } from "ethers";
import { EXCHANGE_CONTRACT_ABI, EXCHANGE_CONTRACT_ADDRESS, TOKEN_CONTRACT_ABI, TOKEN_CONTRACT_ADDRESS } from "../constants";


export const exchangeInstance = async (providerOrSigner) => { 
    const _contractInstance = new Contract( 
        EXCHANGE_CONTRACT_ADDRESS,
        EXCHANGE_CONTRACT_ABI,
        providerOrSigner
    );
    
    return _contractInstance;
}

export const tokenInstance = async (providerOrSigner) => { 
    const _tokenInstance = new Contract(
        TOKEN_CONTRACT_ADDRESS,
        TOKEN_CONTRACT_ABI,
        providerOrSigner
    );

    return _tokenInstance;
}

module.export = { exchangeInstance, tokenInstance }; 

--------------------------------------------------------------------

This is an async function for getting an instance of the exchange contract.
    - We assign export to the function so that we can export it for our use in our other files.
    - We pass in a providerOrSigner to the function, which then creates a new instance of the contract, and since we assigned a variable to that instance, we then
        return it to the function that called it.
At the end of the function we have a module.export that allow us to call export those functions elsewhere.

So now instead of writing a new contract instance everytime we need it, all we have to do is import the function, then call something like this.

const exchangeContract = async exchangeInstance(signer);
    