--------------------------------------------------------------------

Code walkthrough of the NateNFT.sol solidity smart contract.

----------------------------------------------------------------------

'// SPDX-License-Identifier: MIT'

- Code Licence Identifier - this is used to tell other developers / companies
    if they can use the code or not.

'pragma solidity ^0.8.0;'

- Solidity compiler version, tells the solidity compiler what version 
    the code was written in and how to compile it.

'import "@openzeppelin/contracts/token/ERC721/ERC721.sol";'

- This is an import statement that tells the compiler where to get the code
    that we're going to inherit from.

'contract NateNFT is ERC721 {
    constructor() ERC721("NateNFT", "N") {
        _mint(msg.sender, 1);
    }
}'

'contract NateNFT is ERC721' 

- This is declaring the contract name, and telling the compiler that we're
    inheriting the functionality of the OpenZeppelin ERC721 contract.

'constructor() ERC721("NateNFT", "N") {'

- Constructor function, this is a one time use function that is called to set
    certian parameters.
    - In this case we're using the constructor function to instantiating the 
        OpenZeppelin ERC721 contract, and inputing 'NateNFT' (name of the token)
        and "N" the symbol of the contract.
'_mint(msg.sender, 1)'
    - This is telling the constructor to mint one NFT for the contract owner.
    
----------------------------------------------------------------------