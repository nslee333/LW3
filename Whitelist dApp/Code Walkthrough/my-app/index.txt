--------------------------------------------------------------------

Code walkthrough of the index.js script in this Whitelist Dapp - 
Application side. 

--------------------------------------------------------------------

In this page we're going to use the React.js library and React Hooks in this page.

React Hooks is one of the main things we'll be using in this file.

'import Head from "next/head";
import Image from 'next/image'
import styles from "../styles/Home.module.css";
'
- These are all import statements for specific depenedencies that we're going to be 
    using.
'import Head from next/head;'
    - This is importing the Head component from the next.js library.
    - the Head is a component that allows us to append elements to the head of the 
        page.
'import Image from'next/image''
    - This is importing the Image component from Next.js.
    - The Image component is an extenstion of the HTML <img> element, 
        which includes some optimizations to help achieve good Core Web Vitals.
            - 'Web Vitals' is a Google initiative to provide unified guidance
                and metrics to measure end-user page experience on the web.
            - 'Core Web Vitals' is a subset of Google's 'Web Vitals' and it
                consists of three metrics that measure loading, interactivity and
                visual stability.
'import styles from "../styles/Home.module.css";'
    - This is importing the CSS styling from this file.

- const [numOfWhitelisted, setNumOfWhitelisted] = useState(0);
    - This is setting the value of the state to 0.
    - useState retains a stateful value and it retains a function to update the value.
        - So in this case 'numOfWhitelisted' is a variable that is assigned to 
            an integer, and it is the value that is retained in the stateful value
            for the 'useState' react component. 
        - the function that is used to update the value is the 'setNumOfWhitelisted'.
    - The 'useState(0)' is initializing the value of this component.
        - Initializing in programming is the assignment of an initial value for a 
            data object or variable.
'export default function Home() {'
    - The export statement is used when creating JS modules to export objects, 
        functions, variables from the module so they can be used by other programs
        with the help of import statements.
    - There are two types of exports, Named Exports and Default Exports.
        - Named Exports are useful to export several values.
            - During import it is mandatory to use the same name of the 
                corresponding object.
        - Default Export are useful to export only a single object, function
            variable. During the import we can use any name to import.
    - In this case we're only exporting a single function, so its a default export 
        in this instance.   

------------------------------------------------------------------------------------
        
const [walletConnected, setWalletConnected] = useState(false);

const web3ModalRef = useRef();

useEffect(() => {
    if (!walletConnected) {{
        web3ModalRef.current = new web3Modal({
            network: "rinkeby",
            providerOptions: {},
            disabledInjectedProvider: false,
        });
        connectWallet();
    }}
}) [walletConnected]

------------------------------------------------------------------------------------    


ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ

'const [walletConnected, setWalletConnected] = useState(false);'
    - This line is initializing the state of the page.
        - Initializing meaning setting the initial state.
    - 'walletConnected, setWalletConnected' are variables that you can set.
        - 'walletConnected' is the variable assigned to the value.
        - 'setWalletConnected' is the function that is used to update the value.
    -'useState(false)' 
        - This is setting the state of the variable to a boolean value of 'false'.
All of this is important for understanding the code below.
    This code means: is the wallet connected? true or false. Initial state is false. 

'useEffect(() => {'

    - useEffect is a react.js hook that allows you to set side effects in your components
        - Like fetching data, updating a dom etc.
    - useEffect takes two arguments: useEffect(<function> <dependency>).
        useEffect runs on every render unless you:
            1. write an empty array "[]" (dependency), which is effectively telling
                useEffect that it can only run once.
                    - Everytime the dependency changes, it will run, but since  
                        there is an empty array, the logic says that it will only run once and
                        never run again.
            2. write a dependency that has to change in order for it to run again.
                - For example: if a function is called, then useEffect runs again.
                    or if a variable assigned to a numerical value changes, the useEffect hook
                        runs once for every value change.
        - So in this case, useEffect will only run for everytime the value of 'walletConnected'
            changes. 
                - So if it changes from false to true, than the useEffect hook will run.

'if (!walletConnected) {{'
    - if 
        